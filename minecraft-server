#!/bin/bash

server_home="/var/minecraft"

if [ "$1" == "run" ]
then
	if [[ "$EUID" -ne "$(id -u minecraft)" ]]
	then
		echo "minecraft-server ne peut être exécuté que par l'utilisateur \"minecraft\""
		echo "try:"
		echo "	sudo -u minecraft minecraft-server <args>..."
		exit 1
	fi

	killing=false

	function onkill
	{
		killing=true
		if [ -n "$jpid" ]
		then
			echo "fin du processus java $jpid"
			kill -15 "$jpid"
			if kill -0 "$jpid"
			then
				echo "jpid ne s'est pas terminé avec succès. attendre 3 secondes"
				sleep 3s
				kill -9 "$jpid"
			fi
		fi
	}

	trap "onkill" SIGINT SIGTERM SIGQUIT

	server_name="$2"
	if [ -z "$server_name" ]
	then
		# run_id=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
		echo "Aucun nom de serveur donné. Sortie..."
		exit 1
	fi

	if [ ! -d "$server_home/servers/$server_name" ]
	then
		echo "le serveur \"$server_name\" n'existe pas. Un nouveau serveur sera créé avec ce nom"
		mkdir -p "$server_home/servers/$server_name"
	fi
	chown -R minecraft:minecraft "$server_home/servers/$server_name"
	if [ ! -f "$server_home/servers/$server_name/minecraft-server.jar" ]
	then
		cp "$server_home/latest.jar" "$server_home/servers/$server_name/minecraft-server.jar"
	fi

	cd "$server_home/servers/$server_name"
	echo "$$" > "/tmp/.minecraft-server.$server_name"
	while true
	do
		java -Xmx2048M -Xms1024M -jar minecraft-server.jar nogui &
		jpid=$!
		echo "$jpid" > "/tmp/.minecraft-server-java.$server_name"
		wait $jpid
		if $killing
		then
			echo "arrêt du serveur"
			exit
		else
			# Update the EULA
			eula_path="$server_home/servers/$server_name/eula.txt"
			sed -i '/eula=false/c\eula=true' "$eula_path"
		fi
		echo "java s'est arrêté de manière inattendue. redémarrage en 3 secondes"
		sleep 3s
		echo "redémarrage de Java"
	done
elif [ "$1" == "update" ]
then
	if [[ "$EUID" -ne 0 ]] && [[ "$EUID" -ne "$(id -u minecraft)" ]]
	then
		echo "Vous devez être \"root\" ou \"minecraft\" pour mettre à jour le serveur"
		exit 1
	fi

	server_name="$2"

	# Get latest version number
	version_manifest=$(wget -q -O - "https://launchermeta.mojang.com/mc/game/version_manifest.json")
	version=$(echo "$version_manifest" | jq -r ".latest.release")
	if [ -z "$version" ]
	then
		echo "Impossible de trouver la dernière version. Vous n'êtes peut-être pas connecté à Internet"
		exit 1
	fi
	echo "La dernière version est: $version"

	# Download latest version jar
	url="https://mcversions.net/download/$version"
	echo "downloading latest jar from $url"
	wget "$url" -O "/tmp/minecraft-server.$version.jar" || rm -rf "/tmp/minecraft-server.$version.jar"
	if [ ! -f "/tmp/minecraft-server.$version.jar" ]
	then
		echo "Impossible de télécharger le nouveau fichier jar du serveur"
		exit 1
	fi
	echo "installation du serveur.jar..."

	# install latest.jar and latest.version to server home
	mv "/tmp/minecraft-server.$version.jar" "$server_home/latest.jar"
	echo "$version" > "$server_home/latest.version"
	chown minecraft:minecraft "$server_home/latest.jar"
	chown minecraft:minecraft "$server_home/latest.version"

	if [ -n "$server_name" ]
	then
		echo "updating server jar for \"$server_name\""
		cp "$server_home/latest.jar" "$server_home/servers/$server_name/minecraft-server.jar"
		chown minecraft:minecraft "$server_home/servers/$server_name/minecraft-server.jar"
	fi
elif [ -n "$1" ]
then
	echo "Commande invalide: $1"
	exit 1
else
	echo "Vous devez entrer une commande"
fi

